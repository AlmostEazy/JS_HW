/* 
Задание 1
Создайте функцию которая возводит переданное число в куб, необходимо вывести в консоль результат 2^3 степени + 3 ^ 3 степени 
*/

/* 
const cubing = (num) => num ** 3;

console.log (`Сумма двух чисел: ${cubing (2) + cubing (3)}`); 
 */


/* 
Задание 2
Пользователь вводит с клавиатуры число, если ввёл текст, необходимо вывести что значение задано неверно
Создать фукнцию, которая высчитывает 13% от данного числа и выводит в консоль текст "Размер заработной платы за вычетом налогов равен значение" 
*/

/* 
const profit = (num) => 0.87 * num;

let income = +prompt('Введите размер заработной платы');

isNaN(income) ? console.log (`Вы ввели не число, попробуйте еще раз!`) : console.log (`Размер заработной платы за вычетом налогов равен: ${profit (income)}`); // На мой взгляд этот вариант проще

// !income ? console.log (`Вы ввели не число, попробуйте еще раз!`) : console.log (`Размер заработной платы за вычетом налогов равен: ${profit (income)}`); // Можно запутаться с true/false 
 */


/* 
Задание 3
Пользователь с клавиатуры вводит 3 числа, необходимо создать функцию, которая определяет максимальное значение среди этих чисел 
*/

/* 
function maxNumber (a, b, c) {
    let max = a;
    if (b > max) {
        max = b;
        if (c > max) {
            max = c;
        }
    } 
    return max;
}

let numOne = +prompt('Введите первое число');
let numTwo = +prompt('Введите второе число');
let numThree = +prompt('Введите третье число');

isNaN(numOne) || isNaN(numTwo) || isNaN(numThree) ? console.log (`Вы ввели не число, попробуйте еще раз!`) : 
console.log (`Максимальное введенное число: ${maxNumber (numOne, numTwo, numThree)}`);
 */


/* 
Задание 4
Необходимо реализовать четыре функции, каждая функция должна принимать по два числа и выполнять одну из операций (каждая функция выполняет одну из них):
1. Сложение
2. Разность
3. Умножение
4. Деление
Необходимо сделать так, чтобы функция вернула число, например выражение console.log(sum(2, 6)); должно вывести число 8 в консоль 
(sum - функция сложения в данном примере, ваши названия функций могут отличаться). Округлять значения, которые возвращают функции не нужно, 
однако, обратите внимание на разность, функция должна вычесть из большего числа меньшее, либо вернуть 0, если числа равны. Функциям всегда передаются корректные числа, 
проверки на NaN, Infinity делать не нужно. 
*/

/* 
const addition = (a, b) => a + b;

// const difference = (a, b) => Math.max(a, b) - Math.min(a, b);

const difference = (a, b) => {                                  
    if (a > b) {                        // if (a > b) {
        return a - b;                   //     return a - b;
    }  else if (a < b) {                // } else {
        return b - a;                   //     return b - a;
    } else {
        return 0; // Не совсем понятно, зачем возвращать 0, если он в любом случае бы возвращался при равенстве аргументов
    }
}

const multiplication = (a, b) => a * b;

const division = (a, b) => a / b;


console.log (addition (2, 2));
console.log (difference (2, 5));
console.log (difference (5, 2));
console.log (multiplication (2, 2));
console.log (division (2, 2)); 
 */